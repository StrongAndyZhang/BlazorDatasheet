@using System.Text
@using BlazorDatasheet.Core.Data
@using BlazorDatasheet.Core.Layout
@using BlazorDatasheet.DataStructures.Geometry
@using BlazorDatasheet.Render.Layout
@using BlazorDatasheet.Util
@using BlazorDatasheet.Virtualise
@inherits HeadingRenderer

<div style="display: flex; flex-direction: row">

    @if (FrozenStartCount > 0)
    {
        <div style="position: sticky; @GetStickyLeftPositionInfo(); z-index: 4;">
            <ColumnHeadingRenderer
                Sheet="_sheet"
                ViewRegion="new Region(0, 0, _viewRegion.Left, FrozenStartCount - 1)">
                @ChildContent(context)
            </ColumnHeadingRenderer>
        </div>
    }
    <div class="sheet-row-head-container" style="z-index: 2;">
        <Virtualise2D
            @ref="MainView"
            LayoutProvider="LayoutProvider"
            ViewRegion="new Region(0, 0, _viewRegion.Left + FrozenStartCount, _viewRegion.Right - FrozenEndCount)">
            <GridItemTemplate>
                <div class="col-head sheet-cell @GetSelectedClass(context.col)" data-col="@context.col" data-row="-1">
                    @ChildContent(context.col)
                </div>
            </GridItemTemplate>
        </Virtualise2D>
    </div>

    @if (FrozenEndCount > 0)
    {
        <div style="position: sticky; right: 0; z-index: 4">
            <ColumnHeadingRenderer
                Sheet="_sheet"
                ViewRegion="new Region(0, 0, _viewRegion.Right - FrozenEndCount + 1, _viewRegion.Right)">
                @ChildContent(context)
            </ColumnHeadingRenderer>
        </div>
    }
</div>

@code {

    [Parameter] public int FrozenStartCount { get; set; }

    [Parameter] public int FrozenEndCount { get; set; }

    private string GetStickyLeftPositionInfo()
    {
        return $"left: {(AlternateAxisHeadingsShown ? _sheet.Rows.HeadingWidth : 0)}px;";
    }

}